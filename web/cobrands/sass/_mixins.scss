$direction: 'left' !default;

// Padding
$button-padding-top: .75em !default;
$button-padding-bottom: .75em !default;
$button-padding-left: 1em !default;
$button-padding-right: 1em !default;

// Margin
$button-margin-top: 0 !default;
$button-margin-bottom: 0 !default;
$button-margin-right: 0 !default;
$button-margin-left: 0 !default;

//Border-radius
$button-border-radius: 4px !default;

@if (variable-exists(nav_fg)) {
    $nav_colour: $nav_fg !global;
}
@if (variable-exists(nav_fg_hover)) {
    $nav_hover_background_colour: $nav_fg_hover !global;
}
@if (variable-exists(map_nav_bg)) {
    $nav_background_colour: $nav_fg_hover !global;
}


@mixin button-size($button-margin-top:$button-margin-top, $button-margin-right:$button-margin-right, $button-margin-bottom:$button-margin-bottom, $button-margin-left:$button-margin-left, $button-padding-top:$button-padding-top, $button-padding-right:$button-padding-right, $button-padding-bottom:$button-padding-bottom, $button-padding-left:$button-padding-left,
$button-border-radius:$button-border-radius) {
    margin: flip($button-margin-top $button-margin-right $button-margin-bottom $button-margin-left, $button-margin-top $button-margin-left $button-margin-bottom $button-margin-right);
    padding: flip($button-padding-top $button-padding-right $button-padding-bottom $button-padding-left, $button-padding-top $button-padding-left $button-padding-bottom $button-padding-right);
    display: inline-block;
    width: auto;
    height: auto;
    vertical-align: top;
    text-align: center;
    font-size: 1em;
    line-height: 1em;
    font-weight: bold;
    font-family: inherit;
    cursor: pointer;
    border-radius: $button-border-radius;

    &,
    &:hover,
    &:focus {
        // We *never* want buttons to be underlined.
        text-decoration: none !important;
    }

    &:disabled {
        cursor: default;
    }
}

@mixin button-variant($bg-top: #fff, $bg-bottom: #eee, $border: #ccc, $text: inherit, $hover-bg-bottom: #e9e9e9, $hover-bg-top: #f9f9f9, $hover-border: #ccc, $hover-text: inherit, $focus-bg-bottom: #ffe100, $focus-bg-top: #ffe100, $focus-border: #333333, $focus-text: #333333) {
    color: $text !important; // !important to override more specific selectors like `a:link`
    background: $bg-bottom;
    @if $bg-top != $bg-bottom {
        background: linear-gradient($bg-top, $bg-bottom);
    }
    @if $border {
        border: 1px solid $border;
    } @else {
        border: none;
    }

    &:hover {
        color: $hover-text !important;
        background: $hover-bg-bottom;
        @if $hover-bg-top != $hover-bg-bottom {
            background: linear-gradient($hover-bg-top, $hover-bg-bottom);
        }
        @if $hover-border {
            border-color: $hover-border;
        } @else {
            border: none;
        }
    }

    &:focus {
      color: $focus-text !important;
      background: $focus-bg-bottom;
      @if $focus-bg-top != $focus-bg-bottom {
          background: linear-gradient($focus-bg-top, $focus-bg-bottom);
      }
      @if $focus-border {
          border-color: $focus-border;
      } @else {
          border: none;
      }
  }

    &:disabled {
        color: transparentize(#000, 0.4) !important;
        background: #eee;
        @if $border {
            border-color: #eee;
        } @else {
            border: none;
        }
    }
}

// Deprecated.
// Where possible, use button-size() and button-variant() separately to avoid
// replicating layout rules at higher specificities than required.
@mixin button-reset($bg-top: #fff, $bg-bottom: #eee, $border: #ccc, $text: inherit, $hover-bg-bottom: #e9e9e9, $hover-bg-top: #f9f9f9, $hover-border: #ccc, $hover-text: inherit){
  @include button-size();
  @include button-variant($bg-top, $bg-bottom, $border, $text, $hover-bg-bottom, $hover-bg-top, $hover-border, $hover-text);
}

// list reset
@mixin list-reset-soft {
  list-style-type:none;
  padding: 0;
  margin: 0;
  li{
    list-style-type:none;
    padding: 0;
    margin: 0;
    border: 0;
  }
}

// LTR / RTL
$left: left;
@if $direction == right {
  $left: right;
}

$right: right;
@if $direction == right {
  $right: left;
}

@function flip($ltr, $rtl) {
    @if $direction == left {
        @return $ltr;
    } @else {
        @return $rtl;
    }
}

// Compass-like mixins

@mixin clearfix {
    &:before, &:after { content: " "; display: table; }
    &:after { clear: both; }
    & { *zoom: 1; }
}
