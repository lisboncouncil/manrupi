/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@github/clipboard-copy-element@1.3.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function e(e){if("clipboard"in navigator)return navigator.clipboard.writeText(e.textContent||"");const t=getSelection();if(null==t)return Promise.reject(new Error);t.removeAllRanges();const n=document.createRange();return n.selectNodeContents(e),t.addRange(n),document.execCommand("copy"),t.removeAllRanges(),Promise.resolve()}function t(t){if("clipboard"in navigator)return navigator.clipboard.writeText(t);const n=document.body;if(!n)return Promise.reject(new Error);const o=function(e){const t=document.createElement("pre");return t.style.width="1px",t.style.height="1px",t.style.position="fixed",t.style.top="5px",t.textContent=e,t}(t);return n.appendChild(o),e(o),n.removeChild(o),Promise.resolve()}async function n(n){const o=n.getAttribute("for"),r=n.getAttribute("value");function i(){n.dispatchEvent(new CustomEvent("clipboard-copy",{bubbles:!0}))}var a;if("true"!==n.getAttribute("aria-disabled"))if(r)await t(r),i();else if(o){const r="getRootNode"in Element.prototype?n.getRootNode():n.ownerDocument;if(!(r instanceof Document||"ShadowRoot"in window&&r instanceof ShadowRoot))return;const s=r.getElementById(o);s&&(await(a=s,a instanceof HTMLInputElement||a instanceof HTMLTextAreaElement?t(a.value):a instanceof HTMLAnchorElement&&a.hasAttribute("href")?t(a.href):e(a)),i())}}function o(e){const t=e.currentTarget;t instanceof HTMLElement&&n(t)}function r(e){if(" "===e.key||"Enter"===e.key){const t=e.currentTarget;t instanceof HTMLElement&&(e.preventDefault(),n(t))}}function i(e){e.currentTarget.addEventListener("keydown",r)}function a(e){e.currentTarget.removeEventListener("keydown",r)}class s extends HTMLElement{static define(e="clipboard-copy",t=customElements){return t.define(e,this),this}constructor(){super(),this.addEventListener("click",o),this.addEventListener("focus",i),this.addEventListener("blur",a)}connectedCallback(){this.hasAttribute("tabindex")||this.setAttribute("tabindex","0"),this.hasAttribute("role")||this.setAttribute("role","button")}get value(){return this.getAttribute("value")||""}set value(e){this.setAttribute("value",e)}}const c="undefined"!=typeof globalThis?globalThis:window;try{c.ClipboardCopyElement=s.define()}catch(e){if(!(c.DOMException&&e instanceof DOMException&&"NotSupportedError"===e.name||e instanceof ReferenceError))throw e}export{s as ClipboardCopyElement,s as default};
//# sourceMappingURL=/sm/d07c5d884b8a4edb8adc6ad670c97cd087b3bad123400edf84c6aab5193dff65.map